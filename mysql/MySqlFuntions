Round : SELECT ROUND(135.375, 2);

MOD() function
MySQL MOD() returns the remainder of a number divided by another number. This function also works on fractional values and returns the exact remainder. The function returns NULL when the value of divisor is 0.

Syntax:

MOD(N,M), N % M, N MOD M;
SELECT DISTINCT CITY
FROM STATION
WHERE MOD(ID, 2) = 0


q: Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

ans: select distinct city from station where city like '%a' or city like '%e' or city like '%i' or city like '%o' or city like '%u';

Question: Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.

Ans: select name from employee order by name;


RLIKE operator
MySQL RLIKE operator performs a pattern match of a string expression against a pattern. The pattern is supplied as an argument.

The following MySQL statement will find the author’s name beginning with ‘w’. The ‘^’ have been used to match the beginning of the name.

Code:

SELECT * 
FROM author 
WHERE aut_name RLIKE '^w';


You have seen MySQL pattern matching with LIKE ...%. MySQL supports another type of pattern matching operation based on the regular expressions and the REGEXP operator. If you are aware of PHP or PERL, then it is very simple for you to understand because this matching is same like those scripting the regular expressions.

Following is the table of pattern, which can be used along with the REGEXP operator.

Pattern	What the pattern matches
^	Beginning of string
$	End of string
.	Any single character
[...]	Any character listed between the square brackets
[^...]	Any character not listed between the square brackets
p1|p2|p3	Alternation; matches any of the patterns p1, p2, or p3
*	Zero or more instances of preceding element
+	One or more instances of preceding element
{n}	n instances of preceding element
{m,n}	m through n instances of preceding element